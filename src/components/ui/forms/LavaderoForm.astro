
---
const formStrings = {
  name: "Nombre *",
  email: "Email *",
  phone: "Teléfono *",
  submit: "Solicitar reserva",
};



---



<form class="p-4" aria-labelledby="form-title" id="reserva-form">
  <fieldset class="space-y-4">
    <legend id="form-title" class="sr-only">{formStrings.submit}</legend>

    <!-- Nombre -->
    <div class="relative">
      <input type="text" id="input-name" class="peer block w-full rounded-lg border border-transparent p-4 text-sm placeholder:text-transparent autofill:pb-2 autofill:pt-6 focus:border-teal-700/80 focus:pb-2 focus:pt-6 focus:outline-hidden focus:ring-2 focus:ring-teal-700/80 not-placeholder-shown:pb-2 not-placeholder-shown:pt-6"
        placeholder={formStrings.name} required aria-required="true" aria-labelledby="input-name-label" />
      <label id="input-name-label" for="input-name"
        class="pointer-events-none absolute start-0 top-0 h-full truncate border border-transparent p-4 text-slate-600 transition duration-100 ease-in-out peer-focus:-translate-y-1.5 peer-focus:text-xs peer-focus:text-slate-600 peer-not-placeholder-shown:-translate-y-1.5 peer-not-placeholder-shown:text-xs peer-not-placeholder-shown:text-slate-600">
        {formStrings.name}
      </label>
    </div>

    <!-- Email -->
    <div class="relative">
      <input type="email" id="input-email" class="peer block w-full rounded-lg border border-transparent p-4 text-sm placeholder:text-transparent autofill:pb-2 autofill:pt-6 focus:border-teal-700/80 focus:pb-2 focus:pt-6 focus:outline-hidden focus:ring-2 focus:ring-teal-700/80 not-placeholder-shown:pb-2 not-placeholder-shown:pt-6"
        placeholder={formStrings.email} required aria-required="true" aria-labelledby="input-email-label" />
      <label id="input-email-label" for="input-email"
        class="pointer-events-none absolute start-0 top-0 h-full w-full truncate border border-transparent p-4 text-slate-600 transition duration-100 ease-in-out peer-focus:-translate-y-1.5 peer-focus:text-xs peer-focus:text-slate-600 peer-not-placeholder-shown:-translate-y-1.5 peer-not-placeholder-shown:text-xs peer-not-placeholder-shown:text-slate-600">
        {formStrings.email}
      </label>
    </div>

    <!-- Teléfono -->
    <div class="relative">
      <input type="tel" id="input-telefono" class="peer block w-full rounded-lg border border-transparent p-4 text-sm placeholder:text-transparent autofill:pb-2 autofill:pt-6 focus:border-teal-700/80 focus:pb-2 focus:pt-6 focus:outline-hidden focus:ring-2 focus:ring-teal-700/80 not-placeholder-shown:pb-2 not-placeholder-shown:pt-6"
        placeholder={formStrings.phone} required aria-required="true" aria-labelledby="input-telefono-label" />
      <label id="input-telefono-label" for="input-telefono"
        class="pointer-events-none absolute start-0 top-0 h-full truncate border border-transparent p-4 text-slate-600 transition duration-100 ease-in-out peer-focus:-translate-y-1.5 peer-focus:text-xs peer-focus:text-slate-600 peer-not-placeholder-shown:-translate-y-1.5 peer-not-placeholder-shown:text-xs peer-not-placeholder-shown:text-slate-600">
        {formStrings.phone}
      </label>
    </div>

    <!-- Fecha de entrada -->
    <div class="relative">
      <input type="date" id="input-entrada" class="peer block w-full rounded-lg border border-transparent p-4 text-sm text-slate-600 placeholder:text-transparent autofill:pb-2 autofill:pt-6 focus:border-teal-700/80 focus:pb-2 focus:pt-6 focus:outline-hidden focus:ring-2 focus:ring-teal-700/80 not-placeholder-shown:pb-2 not-placeholder-shown:pt-6"
        placeholder="Fecha de entrada" required aria-required="true" aria-labelledby="input-entrada-label" />
      <label id="input-entrada-label" for="input-entrada"
        class="pointer-events-none absolute start-0 top-0 h-full truncate border border-transparent p-4 text-slate-600 transition duration-100 ease-in-out peer-focus:-translate-y-1.5 peer-focus:text-xs peer-focus:text-slate-600 peer-not-placeholder-shown:-translate-y-1.5 peer-not-placeholder-shown:text-xs peer-not-placeholder-shown:text-slate-600">
        Fecha de entrada *
      </label>
    </div>

    <!-- Fecha de salida -->
    <div class="relative">
      <input type="date" id="input-salida" class="peer block w-full rounded-lg border border-transparent p-4 text-sm text-slate-600 placeholder:text-transparent autofill:pb-2 autofill:pt-6 focus:border-teal-700/80 focus:pb-2 focus:pt-6 focus:outline-hidden focus:ring-2 focus:ring-teal-700/80 not-placeholder-shown:pb-2 not-placeholder-shown:pt-6"
        placeholder="Fecha de salida" required aria-required="true" aria-labelledby="input-salida-label" />
      <label id="input-salida-label" for="input-salida"
        class="pointer-events-none absolute start-0 top-0 h-full truncate border border-transparent p-4 text-slate-600 transition duration-100 ease-in-out peer-focus:-translate-y-1.5 peer-focus:text-xs peer-focus:text-slate-600 peer-not-placeholder-shown:-translate-y-1.5 peer-not-placeholder-shown:text-xs peer-not-placeholder-shown:text-slate-600">
        Fecha de salida *
      </label>
    </div>
  </fieldset>


  <!-- <div id="precio-estimado" class="mt-4 text-slate-800 font-medium">
    Precio estimado: <span id="precio-total">--</span> €
  </div> -->

  <div id="precio-estimado" class="mt-4 text-slate-800 font-medium">
  Precio estimado: <span id="precio-total">0</span> €
</div>

  <div class="mt-5">
    <button type="submit" class="inline-flex items-center text-nowrap rounded-lg bg-teal-100 px-6 py-2 font-medium text-slate-700 transition-colors duration-300 hover:bg-teal-700/80 hover:text-white focus:bg-teal-700/80 focus:outline-hidden"
      aria-label={formStrings.submit}>
      {formStrings.submit}
    </button>
  </div>
</form>

<!-- Mensaje de confirmación -->
<div id="mensaje-confirmacion"
  class="fixed inset-0 z-50 hidden flex items-center justify-center bg-black/50 backdrop-blur-sm">
  
  <!-- Tarjeta con fondo sólido -->
<div class="w-full max-w-md rounded-xl bg-white p-6 text-slate-800 shadow-2xl ring-1 ring-slate-300">
    <h2 class="text-lg font-semibold">¡Solicitud enviada correctamente!</h2>
    <p class="mt-1">En breve recibirás un correo con la confirmación de la reserva.</p>
    <p class="mt-2 font-medium">Precio estimado: <span id="precio-confirmacion">0</span> €</p>
    <div class="mt-4 text-right">
      <button id="cerrar-mensaje"
        class="rounded bg-teal-700 px-4 py-2 text-white hover:bg-teal-800 focus:outline-none">
        Cerrar
      </button>
    </div>
  </div>
</div>

<script type="module">
  document.addEventListener('astro:page-load', async () => {
    const form = document.getElementById('reserva-form');
    const mensaje = document.getElementById('mensaje-confirmacion');
    const precioConfirmacion = document.getElementById('precio-confirmacion');
    const PRECIO_SEMANA = 80;
    const PRECIO_FINDE = 120;
    const PRECIO_FESTIVO = 150;
    const festivoSet = new Set();

    // 1. Cargar festivos desde la API local de Spring Boot
async function cargarFestivos() {
  try {

    const res = await fetch(`http://localhost:8080/vacationDays`);
    const festivos = await res.json();
    
    festivos.forEach(f => {
      const fechaFormateada = new Date(f.fecha).toLocaleDateString('sv-SE');
      festivoSet.add(fechaFormateada);
    });

  } catch (err) {
    console.error("Error al cargar festivos desde backend:", err);
  }
}

    await cargarFestivos();

    const precioSpan = document.getElementById('precio-total');
    const inputEntrada = document.getElementById('input-entrada');
    const inputSalida = document.getElementById('input-salida');

    function actualizarPrecio() {
      const entrada = inputEntrada.value;
      const salida = inputSalida.value;

      if (!entrada || !salida || new Date(entrada) >= new Date(salida)) {
        precioSpan.textContent = '0';
        return;
      }

      const precio = calcularPrecio(entrada, salida);
      precioSpan.textContent = precio.toFixed(2);
    }

    inputEntrada.addEventListener('change', actualizarPrecio);
    inputSalida.addEventListener('change', actualizarPrecio);

    // 2. Calcular precio según tipo de día
  function calcularPrecio(entrada, salida) {
  const fechaIni = new Date(entrada);
  const fechaFin = new Date(salida);
  let total = 0;

  console.log("Festivos disponibles en el Set:", Array.from(festivoSet));

  for (let d = new Date(fechaIni); d < fechaFin; d.setDate(d.getDate() + 1)) {
    const fechaStr = d.toLocaleDateString('sv-SE'); // YYYY-MM-DD
    const diaSemana = d.getDay(); // 0 domingo - 6 sábado

    if (festivoSet.has(fechaStr)) {
      total += PRECIO_FESTIVO;
      console.log(`${fechaStr} es festivo → +${PRECIO_FESTIVO}`);
    } else if (diaSemana === 0 || diaSemana === 5 || diaSemana === 6) {
      total += PRECIO_FINDE;
      console.log(`${fechaStr} es finde (día ${diaSemana}) → +${PRECIO_FINDE}`);
    } else {
      total += PRECIO_SEMANA;
      console.log(`${fechaStr} es entre semana → +${PRECIO_SEMANA}`);
    }
  }

  console.log("Precio total calculado:", total);
  return total;
}

    // 3. Enviar el formulario
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const nombre = document.getElementById('input-name').value.trim();
      const correo = document.getElementById('input-email').value.trim();
      const telefono = parseInt(document.getElementById('input-telefono').value.trim(), 10);
      const fecha_ini = document.getElementById('input-entrada').value;
      const fecha_fin = document.getElementById('input-salida').value;

      if (new Date(fecha_ini) >= new Date(fecha_fin)) {
        alert('La fecha de salida debe ser posterior a la de entrada.');
        return;
      }

      const precioTotal = calcularPrecio(fecha_ini, fecha_fin);

      const datos = {
        nombre,
        correo,
        telefono,
        fecha_ini,
        fecha_fin,
        nombre_casa: "El Lavadero",
        aceptada: null
      };

      try {
        const res = await fetch('http://localhost:8080/booking', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(datos)
        });

        if (res.ok) {
          form.reset();
          precioConfirmacion.textContent = precioTotal.toFixed(2);

          document.body.style.overflow = 'hidden'; // Evita scroll de fondo
          mensaje.classList.remove('hidden');
                  
          const btnCerrar = document.getElementById('cerrar-mensaje');
          btnCerrar.addEventListener('click', () => {
            mensaje.classList.add('hidden');
            document.body.style.overflow = ''; // Restaurar scroll
              precioSpan.textContent = '0'; // Reiniciar el precio estimado

          });

          
          mensaje.scrollIntoView({ behavior: 'smooth' });
        } else {
          alert('Error al enviar la reserva.');
        }

        
      } catch (error) {
        console.error(error);
        alert('Error de conexión al enviar la reserva.');
      }
    });
  });
</script>
